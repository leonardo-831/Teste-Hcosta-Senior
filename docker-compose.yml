version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        UID: "${UID:-1000}"
        GID: "${GID:-1000}"
    container_name: tasks_app
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - .:/var/www/html
      - ./storage/logs:/var/www/html/storage/logs
    ports:
      - "9000:9000"
    depends_on:
      mongo:
        condition: service_healthy
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "supervisorctl status | grep -q RUNNING"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15
    container_name: tasks_db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_DATABASE:-teste_hcosta_senior}
      POSTGRES_USER: ${DB_USERNAME:-teste}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-teste} -d ${DB_DATABASE:-teste_hcosta_senior}"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: tasks_web
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./storage/logs:/var/www/html/storage/logs
    depends_on:
      - app
    networks:
      - app-network

  mongo:
    image: mongo:5.0
    container_name: tasks_mongo
    restart: always
    ports:
        - "27017:27017"
    volumes:
        - mongo_data:/data/db
    environment:
        MONGO_INITDB_ROOT_USERNAME: teste
        MONGO_INITDB_ROOT_PASSWORD: password
        MONGO_INITDB_DATABASE: teste_hcosta_senior
    networks:
        - app-network
    healthcheck:
        test: ["CMD-SHELL", "mongosh --quiet --eval 'db.runCommand({ ping: 1 }).ok' | grep -q 1"]
        interval: 10s
        timeout: 10s
        retries: 10
        start_period: 20s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: tasks_rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network
    healthcheck:
        test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping && rabbitmqctl await_startup"]
        interval: 5s
        timeout: 30s
        retries: 10
        start_period: 15s

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  mongo_data:
    driver: local
  rabbitmq_data:
    driver: local
