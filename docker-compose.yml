version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        UID: "${UID:-1000}"
        GID: "${GID:-1000}"
    container_name: tasks_app
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - .:/var/www/html
    ports:
      - "9000:9000"
    depends_on:
      - db
      - mongo
      - rabbitmq
    networks:
      - app-network

  db:
    image: postgres:15
    container_name: tasks_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: teste_hcosta_senior
      POSTGRES_USER: teste
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: tasks_web
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - app-network

  mongo:
    image: mongo
    container_name: tasks_mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: tasks_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  mongo_data:
    driver: local
